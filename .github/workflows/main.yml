name: Pico-CEC Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run clang-format style check
      uses: jidicula/clang-format-action@v4.11.0
      with:
        clang-format-version: '13'
        check-path: .
        exclude-regex: '(FreeRTOS-Kernel\/.+|pico-sdk\/.+)'

  build:
    needs: format
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Clone tinyusb
      shell: bash
      run: |
        cd pico-sdk && git submodule update --init lib/tinyusb

    - name: Install required packages
      shell: bash
      run: |
        sudo apt install -y gcc-arm-none-eabi openscad

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build Pico-CEC
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Export to STL
      run: |
        cd ${{github.workspace}}/openscad && make

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pico-cec-${{ github.run_id }}
        path: |
          ${{github.workspace}}/build/pico-cec.uf2
          ${{github.workspace}}/openscad/*.stl
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    steps:
    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true

    - name: Generate release hashes
      run: |
        ls -lR
        mv build/pico-cec.uf2 .
        mv openscad/*.stl .
        sha256sum pico-cec.uf2 *.stl > sha256sum.txt

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          pico-cec.uf2
          *.stl
          sha256sum.txt
